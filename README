	======	
	RILogo
	======

	Author: Peter Menzel <pmenzel@gmail.com> 
	        Stefan Seemann <seemann@rth.dk>

	Copyright 2012 Peter Menzel, see file LICENCE


	Description
	===========

	RILogo creates an RNA-RNA interaction logo from a pair of RNA sequences or
	alignments. If alignments are given as input, then RILogo displays them as
	sequence logos. Intramolecular base pairs are displayed by arcs connecting
	the corresponding columns of the sequence logo. Intermolecular base pairs are
	denoted by connecting lines between both logos.
	
	RILogo calculates the mutual information for base pairs and displays it
	through a color gradient in the arcs and the lines. Additionally an M
	character is placed in the sequences logos.
	
	See below for description of the input format and usage.

	RILogo is distributed as open source software under the GNU Lesser General Public
	Licence 3, see the file LICENCE.


	Availability
	============

	The source code of RILogo is available at http://github.com/pmenzel/RILogo
	To fetch a copy: git clone git://github.com/pmenzel/RILogo.git 


	Installation
	============

	RILogo is written in C++. It does not depend on
	additional libraries.  To compile from source, simply type "make" and the
	program will be compiled into the binary file "RILogo".


	Usage
	=====

	RILogo expects either one or two input files that contain the sequences as arguments, or can read a
	single input file from STDIN.

	$ ./RILogo [options] file1.fa [file2.fa]  > output.svg


	Input format
	============

	If the input is a single file in FASTA format, in which the two RNAs are
	separated by the '&' character.  All lines have to be of the same length. A
	secondary structure annotation has to be given in a special line with the
	name 'structure'.  Base pairs are denoted in the dot-bracket notation, see
	examples below.  RILogo also accepts two FASTA files as input, each
	containing one input sequence or alignment and a 'structure' line.
	Interactions between the two RNAs can be denoted in the structure line only
	by uppercase letters on the left side and corresponding lowercase letters on
	the right side.  Additionally uppercase and lowercase letters can be used
	together on one side only, see examples below.

	EXAMPLE 1:
	Here the interaction is denoted by 'AA' and 'aa' in the two sequences.

	>seq1
	ACGTAGATGCAT&GCATCAGCATA
	>structure
	..((..AA))..&.(((aa)))..

	EXAMPLE 2:
	Here the interaction is denoted by 'BB' and 'bb', whereas 'AA' and 'aa' is used to denote a
	pseudoknot in the first sequence.

	>seq1
	ACGTAGATGCAT&GCATCAGCATA
	>structure
	AA{{BBaa}}..&.(((bb)))..

	Command line parameters
	=======================
 	-m NAME       Specify name of mutual information measure. Options are 'mi' and 'miwp'. Default is 'miwp'.
  -t FILENAME   Switch to treeMI measure and specify name of file containing the average tree distances.
                This file can be created with 'nw_avg_dist.pl' from a phylogenetic tree in Newick format (uses BioPerl).
  -w            Weighting of p_ij(ab) is done by the sum of the C^x instead of N
  -c FILENAME   Specify name of config file
  -d            Debug mode
  -g            Debug mode for SVG output
  -v            Verbose mode, prints calculated MI values to STDERR
	
	The file default.cfg can be used as a template configuration file to change the default values in RILogo.
	The script run_RILOGO_treeMI.sh can be used to calculate a tree from the input alignment, calculate the distances and then run RILogo.
	It uses fasttree for calculating the tree, which must be installed and the path to fasttree must be set in the script.

	Output
	======
	
	RILogo outputs a single vector graphics file in SVG format, which is written to STDOUT.
	This format can be read
	by most vector drawing programs for post-processing/annotating etc.

	SVG files can easily converted to other file formats with common programs:
	* to EPS:  inkscape -z -f in.svg -E out.eps
	* to PNG:  convert in.svg out.png
	  or specifying a width: inkscape --export-png=out.png --export-width=800 in.svg

	Configuration
	=============

	RILogo can read a configuration file to customize the output.
	See the default.cfg file for the customizable parameters and their
	default values in RILogo.


	Citation
	========

	If you find RILogo useful for your own work, please cite:


	Version history
	===============

	v1.0
	----
	+ first published published version



